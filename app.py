import os
import streamlit as st
from langchain_gigachat import GigaChat
from langchain_core.messages import HumanMessage, SystemMessage

PRE_PROMPT = "–¢—ã –≤—ã—Å—Ç—É–ø–∞–µ—à—å –≤ —Ä–æ–ª–∏ –ò–ò –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞. –ü–æ–¥—Ä–æ–±–Ω–æ –æ—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç–Ω–æ –±—ã–ª–æ –¥–∞–∂–µ —à–∫–æ–ª—å–Ω–∏–∫—É. –ò–∑–±–µ–≥–∞–π –æ–ø–∞—Å–Ω—ã—Ö —Ç–µ–º –æ—Ç–≤–µ—Ç–æ–º: '–¢–µ–±–µ –µ—â—ë —Ä–∞–Ω–æ –æ–± —ç—Ç–æ–º –∑–Ω–∞—Ç—å!'"  # –±–∞–∑–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç
ROLE = '–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç'  # –ò–∑–º–µ–Ω–∏—Ç–µ —ç—Ç–æ –Ω–∞ —Å–≤–æ—é —Ä–æ–ª—å

MODELS = {  # –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–µ–π
    'GigaChat Light': 'GigaChat Light',
    'GigaChat Pro': 'GigaChat Pro',
    'GigaChat Max': 'GigaChat Max',
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="GigaApp",         # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
    page_icon=":robot_face:",     # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏–∫–æ–Ω–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
    layout="wide"                 # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–∞–∫–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã ‚Äî —à–∏—Ä–æ–∫–∏–π —Ñ–æ—Ä–º–∞—Ç
)

# –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è
st.markdown("""
<style>
    /* –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã */
    .main {
        background-color: #f5f7ff;  /* –°–≤–µ—Ç–ª—ã–π –≥–æ–ª—É–±–æ–π —Ü–≤–µ—Ç */
        padding: 20px;  /* –û—Ç—Å—Ç—É–ø—ã –≤–æ–∫—Ä—É–≥ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */
    }

    /* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —á–∞—Ç–∞ —Å –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º –∏ –∑–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–º–∏ —É–≥–ª–∞–º–∏ */
    .chat-container {
        background-color: white;  /* –ë–µ–ª—ã–π —Ñ–æ–Ω */
        border-radius: 10px;  /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ —É–≥–ª—ã */
        padding: 20px;  /* –û—Ç—Å—Ç—É–ø—ã –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);  /* –õ–µ–≥–∫–∞—è —Ç–µ–Ω—å –¥–ª—è –æ–±—ä–µ–º–∞ */
        margin-top: 20px;  /* –û—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É */
    }

    /* –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ —Å —Ñ–æ–Ω–æ–º –∏ –±–µ–ª—ã–º —Ç–µ–∫—Å—Ç–æ–º */
    .stButton button {
        background-color: #4169E1;  /* –°–∏–Ω–∏–π —Ñ–æ–Ω –∫–Ω–æ–ø–∫–∏ */
        color: white;  /* –ë–µ–ª—ã–π —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ */
        font-weight: bold;  /* –ñ–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç */
    }

    /* –°—Ç–∏–ª–∏ –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è API */
    .api-warning {
        color: #ff4b4b;  /* –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è –æ—à–∏–±–æ–∫ */
        font-weight: bold;  /* –ñ–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç */
    }

    /* –û—Ç—Å—Ç—É–ø –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞ —á–∞—Ç–∞ */
    .chat-input {
        margin-top: 20px;  /* –û—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É */
    }
</style>
""", unsafe_allow_html=True)

def setup_session_state():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏"""
    if "api_key" not in st.session_state:
        st.session_state.api_key = ""  # –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –∫–ª—é—á –ø—É—Å—Ç–æ–π
    if "api_connected" not in st.session_state:
        st.session_state.api_connected = False  # –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ
    if "chat_dialogue" not in st.session_state:
        st.session_state.chat_dialogue = []
    if "prompt" not in st.session_state:
        st.session_state.prompt = PRE_PROMPT
    if "role" not in st.session_state:
        st.session_state.role = ROLE
    if "selected_model" not in st.session_state:
        st.session_state.selected_model = 'GigaChat Light'
    if "giga" not in st.session_state:
        st.session_state.giga = None

def render_settings():
    with st.sidebar:
        st.header("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")

        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ API-–∫–ª—é—á–∞
        api_input = st.text_input(
            "–í–≤–µ–¥–∏—Ç–µ API-–∫–ª—é—á GigaChat:",  # –¢–µ–∫—Å—Ç-–ø–æ–¥—Å–∫–∞–∑–∫–∞
            type="password",  # –ü—Ä—è—á–µ–º –≤–≤–µ–¥—ë–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
            key="api_key_input"  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—è
        )

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        if st.button("–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API"):
            if api_input:
                st.session_state.api_key = api_input
                try:
                    st.session_state.giga = GigaChat(credentials=api_input, verify_ssl_certs=False)
                    st.session_state.api_connected = True
                    st.success("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
                except Exception as e:
                    st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {str(e)}")
                    st.session_state.api_connected = False
            else:
                st.error("‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ API-–∫–ª—é—á")

        st.header("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞")
        st.session_state.role = st.sidebar.text_input("–†–æ–ª—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞", value=st.session_state.role)
        st.session_state.prompt = st.sidebar.text_area("–ü—Ä–æ–º–ø—Ç", value=st.session_state.prompt)
        st.session_state.selected_model = st.sidebar.selectbox("–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏", list(MODELS.keys()))

def render_chat_history():
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞"""
    st.header("üí¨ –ß–∞—Ç —Å GigaChat")

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    chat_container = st.container()
    with chat_container:
        for message in st.session_state.chat_dialogue:
            with st.chat_message(message["role"]):
                st.markdown(message["content"])

def generate_response(messages):
    if not st.session_state.api_key:
        return "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ API-–∫–ª—é—á –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ –∏ –Ω–∞–∂–º–∏—Ç–µ '–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API'"
    if not st.session_state.giga:
        return "‚ö†Ô∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"

    try:
        response = st.session_state.giga.invoke(messages)
        return response.content
    except Exception as e:
        return f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"

def handle_user_input():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_input = st.chat_input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:")
    if user_input:
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
        st.session_state.chat_dialogue.append({
            "role": "user",
            "content": user_input
        })

        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        with st.chat_message("user"):
            st.markdown(user_input)

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
        generate_assistant_response(user_input)

def generate_assistant_response(user_input):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"""
    # –°–æ–±–∏—Ä–∞–µ–º –≤–µ—Å—å –¥–∏–∞–ª–æ–≥ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
    dialogue = "\n".join([f"{msg['role'].capitalize()}: {msg['content']}" for msg in st.session_state['chat_dialogue']])
    dialogue += "\nAssistant: "

    messages = [
        SystemMessage(content=st.session_state.prompt),
        HumanMessage(content=dialogue),
    ]

    with st.chat_message("assistant"):
        response_placeholder = st.empty()
        response_placeholder.markdown("‚è≥ –î—É–º–∞—é...")

        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
        full_response = generate_response(messages)

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        response_placeholder.markdown(full_response)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
    st.session_state.chat_dialogue.append({
        "role": "assistant",
        "content": full_response
    })

setup_session_state()     # –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
render_settings()         # —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
render_chat_history()     # –∏—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞
handle_user_input()       # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥

st.markdown("---")
st.caption("Streamlit X GigaChat API")
